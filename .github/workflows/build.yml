on:
  pull_request:
    paths:
      - .github/workflows/build.yml
  push:
name: Build

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-24.04
          - target: aarch64-unknown-linux-musl
            runner: ubuntu-24.04-arm
          - target: x86_64-apple-darwin
            runner: macos-13
          - target: aarch64-apple-darwin
            runner: macos-14
    name: Build on ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        run: |
          rustup update stable
          rustup default stable
          rustup target add ${{ matrix.target }}
      - name: Build
        env:
          CARGO_PROFILE_RELEASE_STRIP: "symbols"
          CARGO_PROFILE_RELEASE_LTO: "fat"
        run: |
          cargo build --release --locked --color always --target ${{ matrix.target }}
      - name: Inspect + rename binaries
        run: |
          set -x
          ls -al target/${{ matrix.target }}/release/
          ldd target/${{ matrix.target }}/release/deadnix || true
          otool -l target/${{ matrix.target }}/release/deadnix || true
          mkdir -p upload
          mv target/${{ matrix.target }}/release/deadnix upload/deadnix-${{ matrix.target }}
      - uses: actions/upload-artifact@v4
        with:
          name: deadnix-${{ matrix.target }}
          path: upload/*

  build_nix:
    name: Build with Nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - uses: cachix/cachix-action@v15
        with:
          name: deadnix
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: List flake structure
        run: nix flake show
      - run: nix flake check -vL
